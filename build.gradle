buildscript {
	ext {
		springBootVersion = '1.3.6.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.+') 

	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

jar {
	baseName = 'demo'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

  artifactory {
    contextUrl = 'http://localhost:8081/artifactory'
    publish {
      repository {
        repoKey = 'libs-snapshot-local' // The Artifactory repository key to publish to
        username = "admin" // The publisher user name
        password = "password" // The publisher password
        // This is an optional section for configuring Ivy publication (when publishIvy = true).
        ivy {
          ivyLayout = '[organization]/[module]/ivy-[revision].xml'
          artifactLayout = '[organization]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]'
          mavenCompatible = true //Convert any dots in an [organization] layout value to path separators, similar to Maven's groupId-to-path conversion. True if not specified
        }
      }
      defaults {
        // Reference to Gradle configurations defined in the build script.
        // This is how we tell the Artifactory Plugin which artifacts should be
        // published to Artifactory.
        publishConfigs('archives', 'published')
        // Properties to be attached to the published artifacts.
        properties = ['qa.level': 'basic', 'dev.team' : 'core']
        // You can also attach properties to published artifacts according to
        // the following notation:
        // <configuration name> <artifact spec>
        // The <configuration name> should be the name of the relevant Gradle Configuration or 'all'
        // (for all configurations).
        // Artifact spec has the following structure:
        // group:artifact:version:classifier@ext
        // Any element in the artifact spec notation can contain the * and ? wildcards.
        // For example:
        // org.acme:*:1.0.?_*:*@tgz
        properties {
          all '*:*:1.*:*@*', key1: 'val1', key2: 'val2'
          all 'org.jfrog.*:*:1.*:*@jar*', key3: 'val3', key4: 'val4'
        }
        publishPom = true // Publish generated POM files to Artifactory (true by default)
        publishIvy = true // Publish generated Ivy descriptor files to Artifactory (true by default)
      }
    }
  }
